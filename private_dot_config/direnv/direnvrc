use_python() {
    if [ -n "$(which pyenv)" ]; then
        local pyversion=$1
        pyenv local ${pyversion}
    fi
}

layout_virtualenv() {
    local pyversion=$1
    local pvenv=$2
    if [ -n "$(which pyenv virtualenv)" ]; then
        pyenv virtualenv --force --quiet ${pyversion} ${pvenv}
    fi
    pyenv local --unset
}

layout_activate() {
    if [ -n "$(which pyenv)" ]; then
        source $(pyenv root)/versions/$1/bin/activate
    fi
}


# ================ MY STUFF =============================

# pip_install_if_required is called by psu which is definied in ~/.zshenv
# it checks if a python modules is already present, and installs it if it isnt
# note: it is simple and doesn't handle cases when a module is installed but returns 
# a non standard message on import.
# pip_install_if_required() {
#   python -c "import $1" 2> /dev/null 1> /dev/null
#   # check the exit code of previous command. if exit code is 1 then the module doesnt exist, so install it.
#   if [ $? -eq 1 ]
#   then
#     python -m pip install "$1" > /dev/null 2>&1
#     if [ $? -eq 0 ]
#     then
#       echo "*** installed $1"
#     fi
#   fi
# }
