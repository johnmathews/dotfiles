" to make a print statement, use :echom "blah"' then :messages
" you can source nested files. example: `source otherVimScriptFilePath.vim`
" :UltiSnipsEdit command opens a private snippet definition file for the current filetype.
" :scriptnames to see a list of all scripts that have been sources, in order https://vi.stackexchange.com/questions/8824/in-what-order-does-vim-read-ftplugin-files-syntax-files-and-the-vimrc-when-th

" ========== Global ==========
set nocompatible
set hidden
set encoding=utf-8
set termguicolors
set t_Co=256
set noerrorbells visualbell t_vb=
set linespace=8
set scrolloff=2
set sidescrolloff=8
set splitbelow
set splitright
set backspace=indent,eol,start
set shell=zsh

set expandtab
set shiftwidth=2
set tabstop=2

set wildmode=longest:full,full
set nowrap
set list
set listchars=tab:>\ ,trail:.

set signcolumn=yes

set undofile
set undolevels=100000
set undodir=~/.vim/.undo/,~/.vim/undo,/tmp//
set backupdir=~/.vim/.backup/,/tmp//
set directory=~/vim/.swp/,/tmp//

set timeoutlen=500
set ttimeoutlen=100
set mouse=a
set nostartofline
set number relativenumber

set shortmess-=S
set shortmess+=c"

set updatetime=300
set redrawtime=100000
set cmdheight=2

set spelllang=en_us
set spellfile=$HOME/.vim/spell/en.utf-8.add
set spellsuggest+=10 " make the spell suggestions window 10 lines high not whole screen

set incsearch
set ignorecase
set smartcase
set hlsearch


if has("clipboard")
  set clipboard=unnamed " copy to the system clipboard
  if has("unnamedplus") " X11 support
    set clipboard+=unnamedplus
  endif
endif


set background=dark

filetype plugin indent on
syntax enable

let mapleader="\<Space>"

highlight Search guibg=purple guifg='NONE'
highlight Search cterm=none ctermbg=green ctermfg=black
highlight BadWhitespace ctermbg=red guibg=darkred

" Cursor settings https://vim.fandom.com/wiki/Change_cursor_shape_in_different_modes
let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
let &t_SR = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=2\x7\<Esc>\\"
let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"

let pyEnvLib = $VIRTUAL_ENV
" format .JSON files by using the previously installed jq cli tool
com! JQ %!jq

" fuzzy file, buffer, tag finder
set rtp+=/usr/local/opt/fzf

call plug#begin('~/.vim/plugged')

" FUNCTIONS
source ~/.vim/config/functions.vim
" PLUGINS
source ~/.vim/config/plugins.vim
" AUTOCOMMANDS
source ~/.vim/config/autoCommandGroups.vim
" KEYMAPS
source ~/.vim/config/keyMaps.vim
" FUNCTIONS
source ~/.vim/config/functions.vim

call plug#end()

colorscheme badwolf
