echo 'start ~/.bash_profile'

if test -t 1; then
exec zsh
fi

echo "debug flag 1"

# Add `~/bin` to the `$PATH`
# export PATH="$HOME/bin:$PATH";
# export PATH="/Applications/Google Chrome.app/Contents/MacOS:$PATH"

# What is GPG? Sign my git commits. what?
GPG_TTY=$(tty)
export GPG_TTY

echo "debug flag 2"

# Load the shell dotfiles, and then some:
# * ~/.path can be used to extend `$PATH`.
# * ~/.extra can be used for other settings you don’t want to commit.
#for file in ~/.{path,bash_prompt,exports,aliases,functions,extra}; do
for file in ~/.{path,exports,aliases,functions,extra}; do
	[ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

echo "debug flag 3"

# Case-insensitive globbing (used in pathname expansion)
shopt -s nocaseglob;

echo "debug flag 4"

# Append to the Bash history file, rather than overwriting it
shopt -s histappend;

echo "debug flag 5"


# Autocorrect typos in path names when using `cd`
shopt -s cdspell;

echo "debug flag 6"


# Enable some Bash 4 features when possible:
# * `autocd`, e.g. `**/qux` will enter `./foo/bar/baz/qux`
# * Recursive globbing, e.g. `echo **/*.txt`
for option in autocd globstar; do
	shopt -s "$option" 2> /dev/null;
done;

echo "debug flag 7"



# Add tab completion for many Bash commands
if which brew &> /dev/null && [ -f "$(brew --prefix)/share/bash-completion/bash_completion" ]; then
	source "$(brew --prefix)/share/bash-completion/bash_completion";
elif [ -f /etc/bash_completion ]; then
	source /etc/bash_completion;
fi;


echo "debug flag 8"

# Enable tab completion for `g` by marking it as an alias for `git`
if type _git &> /dev/null && [ -f /usr/local/etc/bash_completion.d/git-completion.bash ]; then
	complete -o default -o nospace -F _git g;
fi;

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh;


echo "debug flag 9"


# Add tab completion for `defaults read|write NSGlobalDomain`
# You could just use `-g` instead, but I like being explicit
complete -W "NSGlobalDomain" defaults;

# Add `killall` tab completion for common apps
complete -o "nospace" -W "Contacts Calendar Dock Finder Mail Safari iTunes SystemUIServer Terminal Twitter" killall;


echo "debug flag 10"


[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# added by Anaconda3 5.2.0 installer
# export PATH="/anaconda3/bin:$PATH"

# added by Miniconda3 installer
# export PATH="/Users/john/miniconda3/bin:$PATH"

# added by Anaconda3 5.2.0 installer
# export PATH="/Users/john/anaconda3/bin:$PATH"


echo "debug flag 11"


# add current working directory in iterm2 window title bar https://gist.github.com/phette23/5270658
if [ $ITERM_SESSION_ID ]; then
  export PROMPT_COMMAND='echo -ne "\033];${PWD##*/}\007"; ':"$PROMPT_COMMAND";
fi
# Piece-by-Piece Explanation:
# the if condition makes sure we only screw with $PROMPT_COMMAND if we're in an iTerm environment
# iTerm happens to give each session a unique $ITERM_SESSION_ID we can use, $ITERM_PROFILE is an option too
# the $PROMPT_COMMAND environment variable is executed every time a command is run
# see: ss64.com/bash/syntax-prompt.html
# we want to update the iTerm tab title to reflect the current directory (not full path, which is too long)
# echo -ne "\033;foo\007" sets the current tab title to "foo"
# see: stackoverflow.com/questions/8823103/how-does-this-script-for-naming-iterm-tabs-work
# the two flags, -n = no trailing newline & -e = interpret backslashed characters, e.g. \033 is ESC, \007 is BEL
# see: ss64.com/bash/echo.html for echo documentation
# we set the title to ${PWD##*/} which is just the current dir, not full path
# see: stackoverflow.com/questions/1371261/get-current-directory-name-without-full-path-in-bash-script
# then we append the rest of $PROMPT_COMMAND so as not to remove what was already there
# voilà!


echo "debug flag 12"


source /Users/john/Library/Preferences/org.dystroy.broot/launcher/bash/br


echo "debug flag 13"



# tmux adds some stuff with PATH, stop it
# https://superuser.com/questions/544989/does-tmux-sort-the-path-variable
if [ -f /etc/profile ]; then
    PATH=""
    source /etc/profile
fi

source $(brew --prefix)/etc/profile.d/z.sh

echo 'end ~/.bash_profile'

source /Users/jm943l/.config/broot/launcher/bash/br
. "$HOME/.cargo/env"

source /Users/john/Library/Application Support/org.dystroy.broot/launcher/bash/br
