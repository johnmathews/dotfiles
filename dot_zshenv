# ====== .zshenv ======
# ENVIRONMENT VARIABLES
# $PATH
# should be set in this file..
#
# sourced on all invocations of the shell, unless the -f option is set.
# should contain commands to set the command search path plus other important environment variables.
# should not contain commands that produce output or assume the shell is attached to a tty.
 
# to print each PATH section on its own line: tr ':' '\n' <<< "$PATH" or `echo $PATH | tr ':' '\n'`
# The tr(anslate) utility copies the standard input to the standard output with substitution or deletion of selected characters

# Unison
uni() {
  localProjectRoot=$(git rev-parse --show-toplevel)
  remoteProjectRoot=$(cat $localProjectRoot/.remoteprojectroot)
  host=ext_jmatthews4_wayfair_com
  user=ainb-jmatthews4
  echo "Local Project Root: "$localProjectRoot
  echo "Remote Project Root: "$remoteProjectRoot
  # Including the preference `-force root` causes Unison to resolve all differences (even non-conflicting changes) in favor of root.
  # This effectively changes Unison from a synchronizer into a mirroring utility. 
  unison -batch -color true $localProjectRoot ssh://$host@$user//home/$host/$remoteProjectRoot -force $localProjectRoot
}

export LC_ALL=en_US.utf-8 
export LANG="$LC_ALL"
export ZSH=$HOME/.oh-my-zsh

export SSH_KEY_PATH="~/.ssh/rsa_id"

export EDITOR=vi
export VISUAL=vi

export TERM="xterm-256color"
export COLORTERM="truecolor"


# bat configuration file location
export BAT_CONFIG_PATH="$HOME/.bat.conf"


# Let compilers find zlib. Turn off for pyenv install.
export LDFLAGS="${LDFLAGS} -L/usr/local/opt/zlib/lib"
export CPPFLAGS="${CPPFLAGS} -I/usr/local/opt/zlib/include"


if [ "$(uname)" = "darwin" ]
then
  export FZF_BASE="~/.fzf/install"
elif [ "$(uname)" = "linux" ]
then 
  export FZF_BASE=" /home/linuxbrew/.linuxbrew/opt/fzf/install "
fi


if type rg &> /dev/null; then
  export FZF_DEFAULT_COMMAND='rg --files'
  export FZF_DEFAULT_OPTS='-m --height 50% --border'
fi


# Manpath
export MANPATH="/usr/local/man:$MANPATH"
export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"


# ====== PATH START =======================================================
export PATH="/usr/local/sbin:$PATH"
export PATH=$HOME/bin:/usr/local/bin:$PATH:/usr/sbin

if [ "$(uname)" = "Darwin" ]; then
  # add Google Cloud Platform CLI tools to PATH
  source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'

  export PATH="$HOME/.cargo/bin:$PATH"
  source "$HOME/.cargo/env"
fi

# pip will install things correctly
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
export PATH="/usr/local/opt/python/libexec/bin:$PATH"
# bibtex executable
export PATH="/usr/local/texlive/texmf-local/:$PATH"
# `rabbitmq-server` installed using brew
export PATH=$PATH:/usr/local/opt/rabbitmq/sbin
# zprof
export PATH="/usr/local/opt/tcl-tk/bin:$PATH"
# go binaries
export PATH="$(go env GOPATH)/bin:$PATH"
# RVM - make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

# if system is linux, add linuxbrew to path
if [ "$(uname)" = "Linux" ]; then
    export PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH"
fi

# ====== PATH END ============================================================
