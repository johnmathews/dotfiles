# ====== .zshenv ======
# ENVIRONMENT VARIABLES
# $PATH
# should be set in this file..
#
# sourced on all invocations of the shell, unless the -f option is set.
# should contain commands to set the command search path plus other important environment variables.
# should not contain commands that produce output or assume the shell is attached to a tty.
 
# to print each PATH section on its own line: tr ':' '\n' <<< "$PATH" or `echo $PATH | tr ':' '\n'`
# The tr(anslate) utility copies the standard input to the standard output with substitution or deletion of selected characters


# Unison
uni() {
  localGitDir=$(git rev-parse --absolute-git-dir)
  localProjectRoot=$(dirname $localGitDir)
  remoteProjectRoot=$(cat $localProjectRoot/.remoteprojectroot)
  host=ext_jmatthews4_wayfair_com
  user=ainb-jmatthews4
  echo "Local Project Root: "$localProjectRoot
  echo "Remote Project Root: "$remoteProjectRoot
  # Including the preference `-force root` causes Unison to resolve all differences (even non-conflicting changes) in favor of root.
  # This effectively changes Unison from a synchronizer into a mirroring utility. 
  unison -batch -color true $localProjectRoot ssh://$host@$user//home/$host/$remoteProjectRoot -force $localProjectRoot
}

# this activates a python virtualenv when a subshell is created by e.g vim
# https://vi.stackexchange.com/a/7654
if [[ -n $VIRTUAL_ENV && -e "${VIRTUAL_ENV}/bin/activate" ]]; then
  source "${VIRTUAL_ENV}/bin/activate"
fi

export LC_ALL=en_US.utf-8 
export LANG="$LC_ALL"
export ZSH=$HOME/.oh-my-zsh

export SSH_KEY_PATH="~/.ssh/rsa_id"

export EDITOR=nvim
export VISUAL=nvim

export BAT_CONFIG_PATH="$HOME/.bat.conf"
export FZF_BASE="~/.fzf/install"


# nvim needs these commented out, vim needs these set
# export TERM="xterm-256color"
# export COLORTERM="truecolor"
[[ -n $TMUX ]] && export TERM="xterm-256color"
# [[ $TMUX != "" ]] && export TERM="screen-256color"


# Let compilers find zlib. Turn off for pyenv install.
# export LDFLAGS="${LDFLAGS} -L/usr/local/opt/zlib/lib"
# export CPPFLAGS="${CPPFLAGS} -I/usr/local/opt/zlib/include"


if type rg &> /dev/null; then
  export FZF_DEFAULT_COMMAND='rg --files'
  export FZF_DEFAULT_OPTS='-m --height 50% --border'
fi

export MANPATH="/usr/local/man:$MANPATH"
export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"

export PATH="/usr/local/sbin:$PATH"
export PATH=$PATH:$HOME/bin:/usr/local/bin:/usr/sbin

source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'

# export PATH="$HOME/.cargo/bin:$PATH"
# source "$HOME/.cargo/env"

# pip will install things correctly
# export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

# bibtex executable
# export PATH="/usr/local/texlive/texmf-local/:$PATH"

# `rabbitmq-server` installed using brew
# export PATH=$PATH:/usr/local/opt/rabbitmq/sbin

# zprof
# export PATH="/usr/local/opt/tcl-tk/bin:$PATH"

# go binaries
# export PATH="$(go env GOPATH)/bin:$PATH"

# RVM - make sure this is the last PATH variable change.
# export PATH="$PATH:$HOME/.rvm/bin"
